{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","components/ErrorNotification.js","services/persons.js","App.js","index.js"],"names":["Filter","filtertext","onChange","value","PersonForm","onSubmit","valueName","valueNumber","onNameChange","onNumberChange","type","Persons","rows","Notification","message","className","ErrorNotification","baseUrl","axios","get","then","response","data","newObject","post","id","console","log","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFiltertext","setNewFiltertext","errorMessage","setErrorMessage","notificationMessage","setNotificationMessage","useEffect","phonebookService","initialPersons","length","removePerson","person","window","confirm","name","filter","p","setTimeout","catch","event","target","preventDefault","personObject","number","some","e","personToBeReplaced","find","returnedPerson","map","concat","toLowerCase","includes","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.597d1794.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filtertext, onChange }) => {\n    return (\n        <div>\n            filter shown with <input\n                value={filtertext}\n                onChange={onChange} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ onSubmit, valueName, valueNumber, onNameChange, onNumberChange }) => {\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <div>\n                    name: <input\n                        value={valueName}\n                        onChange={onNameChange} /><br />\n                    number: <input\n                        value={valueNumber}\n                        onChange={onNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ rows }) => {\n    return (\n        <ul>\n            {rows}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  export default ErrorNotification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    console.log('delete this url', baseUrl + \"/\" + id)\n    const request = axios.delete(baseUrl + \"/\" + id)\n    return request.then(response => response.data)\n}\n\nconst replace = (newObject, id) => {\n    const request = axios.put(baseUrl + \"/\" + id, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, replace }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\nimport phonebookService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFiltertext, setNewFiltertext] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    phonebookService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }, [])\n  console.log('render', persons.length, 'notes')\n\n  const rows = () =>\n    persons.filter(person => person.name.toLowerCase().includes(newFiltertext.toLowerCase())).map(person =>\n      <li key={person.name}>{person.name} {person.number} <button onClick={() => removePerson(person)}>remove</button></li>\n    )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some(e => e.name === personObject.name)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        var personToBeReplaced = persons.find(p => p.name === personObject.name)\n        phonebookService\n          .replace(personObject, personToBeReplaced.id)\n          .then(returnedPerson => {\n            console.log('returnedperson is ', returnedPerson)\n            console.log('person to be replaced is ', personToBeReplaced)\n            setPersons(persons.map(p => p.name !== returnedPerson.name ? p : returnedPerson))\n            setNotificationMessage(\n              `Changed number of ${returnedPerson.name} successfully`\n            )\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch(() => {\n            setErrorMessage(\n              `Information of '${personToBeReplaced.name}' was already deleted from server, please try again`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.name !== personToBeReplaced.name))\n          })\n      }\n    }\n    else {\n      phonebookService\n        .create(personObject)\n        .then(returnedPerson => {\n          console.log(returnedPerson)\n          setPersons(persons.concat(returnedPerson))\n          setNotificationMessage(\n            `Added ${personObject.name}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n    /*Filter is also wiped to let the user certainly see the name she just added*/\n    setNewFiltertext('')\n  }\n\n  const removePerson = (person) => {\n    console.log('remove button clicked', person)\n\n    if (window.confirm('Are you sure you want to remove ' + person.name + ' from phonebook?')) {\n      phonebookService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          setNotificationMessage(\n            `${person.name} removed successfully.`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(() => {\n          setErrorMessage(\n            `Information of '${person.name}' was already deleted from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.name !== person.name))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltertextChange = (event) => {\n    console.log(event.target.value)\n    setNewFiltertext(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} />\n      <ErrorNotification message={errorMessage} />\n\n      <Filter\n        filtertext={newFiltertext}\n        onChange={handleFiltertextChange}\n      />\n\n      <h3>add a new</h3>\n\n      <PersonForm\n        onSubmit={addPerson}\n        valueName={newName}\n        valueNumber={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons rows={rows()} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}